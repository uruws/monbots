// check api user profile update
api_login()

smsName = "Ms. Bot"

// check original value
user_pre = bot.get(USER_URL)
assert.json_match(user_pre, "pre response status", `{"status": "success"}`)
assert.json_matchf(user_pre, "pre user smsName",
	`{"data": {"user": {"smsName": "%s"}}}`, smsName)

// update value
values = url.parse_query("smsName=testing_profile_update")
resp = bot.post_form(USER_UPDATE_URL, values)
assert.http_status(resp, http.status_ok)
assert.http_header(resp, "content-type", "application/json")
assert.json_match(resp, "response status", `{"status": "success"}`)

// check updated value
user_post = bot.get(USER_URL)
assert.json_match(user_post, "post response status", `{"status": "success"}`)
assert.json_match(user_post, "post user smsName",
	`{"data": {"user": {"smsName": "testing_profile_update"}}}`)

// restore original value
values = url.parse_queryf("smsName=%s", smsName)
resp = bot.post_form(USER_UPDATE_URL, values)
assert.http_status(resp, http.status_ok)
assert.http_header(resp, "content-type", "application/json")
assert.json_match(resp, "response status", `{"status": "success"}`)

api_logout()
